### Customer Segmentation Using K-Means Clustering with R

### Install and upload packages 
install.packages("ggplot2")
install.packages("readr")
install.packages("gridExtra")
install.packages("tidyverse")
install.packages("skimr")
install.packages("tidyr")
install.packages("dplyr")
install.packages("lubridate")
install.packages("data.table")
install.packages("knitr")
install.packages("stringr")
install.packages("readxl")
install.packages("plotrix")


library(ggplot2) 
library(readr) 
library(gridExtra)
library(tidyverse)
library(skimr)
library(readr) 
library(tidyr)
library(dplyr)
library(lubridate)
library(data.table)
library(knitr)
library(stringr)
library(readxl)
library(plotrix)


### Read csv with file path
customer_data <- read.csv("Mall_Customers.csv")
customer_data


#### Exploratory Data Analysis


### Display the First 10 Rows of the Dataset
head(customer_data, 10)


### Understanding the Dataset
str(customer_data)


names(customer_data)


### Summary Statistics for Age
summary(customer_data$Age)



### Standard Deviation of Age
sd(customer_data$Age)



### Summary of Annual Income
summary(customer_data$Annual.Income..k..)



### Summary of Age
summary(customer_data$Age)



### Standard Deviation (SD) of Spending Score
sd(customer_data$Spending.Score..1.100.)



### Data Visualization with Bar Chart for Gender Comparison
a=table(customer_data$Gender)
barplot(a,main="Bar Chart for Gender Comparision",
        ylab="Count",
        xlab="Gender",
        col=rainbow(2),
        legend=rownames(a))

#we can observe the following about the gender distribution:
#Female Dominance: The bar for "Female" is significantly taller than the bar for "Male," indicating that there are more female customers in the dataset.
#Gender Imbalance: The dataset appears to be skewed towards female customers.




### Data Visualization with Pie Chart for Gender Comparison
pct=round(a/sum(a)*100)
lbs=paste(c("Female","Male")," ",pct,"%",sep=" ")
library(plotrix)
pie3D(a,labels=lbs,
      main="Pie Chart Depicting Ratio of Gender")

# we can observe the following about the gender distribution:
#Female Dominance: Approximately 56% of the customers are female.
#Male Minority: Approximately 44% of the customers are male.




### Data Visualization of Age Distribution
summary(customer_data$Age)



### Histogram for Age Distribution
hist(customer_data$Age,
     col="blue",
     main="Histogram to Show Count of Age Class",
     xlab="Age Class",
     ylab="Frequency",
     labels=TRUE)

### Box Plot for Age
boxplot(customer_data$Age,
        col="#ff0066",
        main="Boxplot of Age")



### Analysis of the Annual Income of the Customers


### Histogram for Annual Income
summary(customer_data$Annual.Income..k..)
hist(customer_data$Annual.Income..k..,
     col="#660033",
     main="Histogram for Annual Income",
     xlab="Annual Income Class",
     ylab="Frequency",
     labels=TRUE)




### Density Plot for Annual Income
plot(density(customer_data$Annual.Income..k..),
     col="yellow",
     main="Density Plot for Annual Income",
     xlab="Annual Income Class",
     ylab="Density")
polygon(density(customer_data$Annual.Income..k..),
        col="#ccff66")


### Descriptive Statistics for Spending Score of the Customers
summary(customer_data$Spending.Score..1.100.)



### Box Plot for Spending Score
boxplot(customer_data$Spending.Score..1.100.,
        horizontal=TRUE,
        col="#990000",
        main="Box Plot Visualization for Spending Score")



### Histogram for Spending Score
hist(customer_data$Spending.Score..1.100.,
     main="Histogram for Spending Score",
     xlab="Spending Score Class",
     ylab="Frequency",
     col="#6600cc",
     labels=TRUE)



### K-Means Clustering and Elbow Method 
library(purrr)
set.seed(123)



### function to calculate total intra-cluster sum of square 
iss <- function(k) {
  kmeans(customer_data[,3:5],k,iter.max=100,nstart=100,algorithm="Lloyd" )$tot.withinss
}
k.values <- 1:10
iss_values <- map_dbl(k.values, iss)
plot(k.values, iss_values,
     type="b", pch = 19, frame = FALSE, 
     xlab="Number of clusters K",
     ylab="Total intra-clusters sum of squares")




### Average Silhouette Method
library(cluster)  # Finding Groups in Data
library(gridExtra)  # Miscellaneous Functions for "Grid" Graphics
library(grid)


k2<-kmeans(customer_data[,3:5],2,iter.max=100,nstart=50,algorithm="Lloyd")
s2<-plot(silhouette(k2$cluster,dist(customer_data[,3:5],"euclidean")))



k3<-kmeans(customer_data[,3:5],3,iter.max=100,nstart=50,algorithm="Lloyd")
s3<-plot(silhouette(k3$cluster,dist(customer_data[,3:5],"euclidean")))



k4<-kmeans(customer_data[,3:5],4,iter.max=100,nstart=50,algorithm="Lloyd")
s4<-plot(silhouette(k4$cluster,dist(customer_data[,3:5],"euclidean")))



k5<-kmeans(customer_data[,3:5],5,iter.max=100,nstart=50,algorithm="Lloyd")
s5<-plot(silhouette(k5$cluster,dist(customer_data[,3:5],"euclidean")))



k6<-kmeans(customer_data[,3:5],6,iter.max=100,nstart=50,algorithm="Lloyd")
s6<-plot(silhouette(k6$cluster,dist(customer_data[,3:5],"euclidean")))



k7<-kmeans(customer_data[,3:5],7,iter.max=100,nstart=50,algorithm="Lloyd")
s7<-plot(silhouette(k7$cluster,dist(customer_data[,3:5],"euclidean")))



k8<-kmeans(customer_data[,3:5],8,iter.max=100,nstart=50,algorithm="Lloyd")
s8<-plot(silhouette(k8$cluster,dist(customer_data[,3:5],"euclidean")))




k9<-kmeans(customer_data[,3:5],9,iter.max=100,nstart=50,algorithm="Lloyd")
s9<-plot(silhouette(k9$cluster,dist(customer_data[,3:5],"euclidean")))




k10<-kmeans(customer_data[,3:5],10,iter.max=100,nstart=50,algorithm="Lloyd")
s10<-plot(silhouette(k10$cluster,dist(customer_data[,3:5],"euclidean")))



### Visualization for the Optimal Number of Clusters

packageurl <- "https://cran.r-project.org/src/contrib/Archive/emmeans/emmeans_1.7.0.tar.gz"
install.packages(packageurl, repos=NULL, type="source")
install.packages("factoextra")
install.packages("NbClust")



library(NbClust)
library(factoextra)  # Extract and Visualize the Results of Multivariate Data Analyses



### Optimal Number of Clusters
fviz_nbclust(customer_data[,3:5], kmeans, method = "silhouette")



#####
set.seed(125)
stat_gap <- clusGap(customer_data[,3:5], FUN = kmeans, nstart = 25,



K.max = 10, B = 50)
fviz_gap_stat(stat_gap)
#####



k6<-kmeans(customer_data[,3:5],6,iter.max=100,nstart=50,algorithm="Lloyd")
k6



### Clustering Result
###  Data Visualization for the Clustering Results using the First Two Principle Components
pcclust=prcomp(customer_data[,3:5],scale=FALSE) #principal component analysis
summary(pcclust)



pcclust$rotation[,1:2]




### Data Visualization for the Clusters
set.seed(1)
ggplot(customer_data, aes(x =Annual.Income..k.., y = Spending.Score..1.100.)) + 
  geom_point(stat = "identity", aes(color = as.factor(k6$cluster))) +
  scale_color_discrete(name=" ",
                       breaks=c("1", "2", "3", "4", "5","6"),
                       labels=c("Cluster 1", "Cluster 2", "Cluster 3", "Cluster 4", "Cluster 5","Cluster 6")) +
  ggtitle("Segments of Mall Customers", subtitle = "Using K-means Clustering")





### Data Visualization for Mall Customers
ggplot(customer_data, aes(x =Spending.Score..1.100., y =Age)) + 
  geom_point(stat = "identity", aes(color = as.factor(k6$cluster))) +
  scale_color_discrete(name=" ",
                       breaks=c("1", "2", "3", "4", "5","6"),
                       labels=c("Cluster 1", "Cluster 2", "Cluster 3", "Cluster 4", "Cluster 5","Cluster 6")) +
  ggtitle("Segments of Mall Customers", subtitle = "Using K-means Clustering")




### Analyzing the K-Means Clustering Visualization
kCols=function(vec){cols=rainbow (length (unique (vec)))
return (cols[as.numeric(as.factor(vec))])}
digCluster<-k6$cluster; dignm<-as.character(digCluster); # K-means clusters
plot(pcclust$x[,1:2], col =kCols(digCluster),pch =19,xlab ="K-means",ylab="classes")
legend("bottomleft",unique(dignm),fill=unique(kCols(digCluster)))
